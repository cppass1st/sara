"use client";
import { useEffect, useMemo, useState } from "react";
import { supabase } from "@/lib/supabaseClient";

// --------- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è ----------
const EDIT_WINDOW_MS = 2 * 60 * 1000;   // 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –æ–¥–Ω—É –ø—Ä–∞–≤–∫—É
const THROTTLE_MS    = 10 * 60 * 1000;  // 10 –º–∏–Ω—É—Ç –º–µ–∂–¥—É –Ω–æ–≤—ã–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏

// ---------- –í—Å–ø–æ–º–æ–≥–∞–ª–∫–∏ ----------
function storageKey(lessonId) {
  return `fb_state_${lessonId}`;
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É—Ä–æ–∫–∞:
// { lastId: string, firstSubmittedAt: number, editedOnce: boolean }
function loadState(lessonId) {
  try {
    const raw = localStorage.getItem(storageKey(lessonId));
    return raw ? JSON.parse(raw) : null;
  } catch { return null; }
}

function saveState(lessonId, state) {
  localStorage.setItem(storageKey(lessonId), JSON.stringify(state));
}

// –•—ç—à UA (–Ω–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ—Å—Ç–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä)
function hashCode(str) {
  let h = 0;
  for (let i = 0; i < str.length; i++) {
    h = (h << 5) - h + str.charCodeAt(i);
    h |= 0;
  }
  return h;
}

export default function FeedbackBar({ lessonId, visible = true }) {
  const [rating, setRating]   = useState(null); // 'up' | 'down'
  const [comment, setComment] = useState("");
  const [status, setStatus]   = useState("idle");   // idle | submitting | done | editing | error
  const [errorMsg, setErrorMsg] = useState("");

  // –õ–æ–∫–∞–ª—å–Ω—ã–π state –∏–∑ –ø–∞–º—è—Ç–∏
  const [fbState, setFbState] = useState(null); // { lastId, firstSubmittedAt, editedOnce }
  const [now, setNow] = useState(Date.now());   // –¥–ª—è —Ç–∞–π–º–µ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞

  // –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º state –ø—Ä–∏ –º–∞—É–Ω—Ç–µ/—Å–º–µ–Ω–µ —É—Ä–æ–∫–∞
  useEffect(() => {
    if (!visible) return;
    const s = loadState(lessonId);
    setFbState(s);
  }, [lessonId, visible]);

  // –¢–∏–∫ —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  useEffect(() => {
    const t = setInterval(() => setNow(Date.now()), 1000);
    return () => clearInterval(t);
  }, []);

  // –ü–æ—Å—á–∏—Ç–∞–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–∞–≤–∏—Ç—å –∏ –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–π
  const canEditNow = useMemo(() => {
    if (!fbState?.firstSubmittedAt || fbState?.editedOnce) return false;
    return now - fbState.firstSubmittedAt <= EDIT_WINDOW_MS;
  }, [fbState, now]);

  const canSendNew = useMemo(() => {
    // –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ (–ù–ï –ø—Ä–∞–≤–∫–∞) –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø—É—Å—Ç—è 10 –º–∏–Ω—É—Ç
    if (!fbState?.firstSubmittedAt) return true; // –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏
    return now - fbState.firstSubmittedAt > THROTTLE_MS;
  }, [fbState, now]);

  // –û—Å—Ç–∞–≤–∏–º –±—ã—Å—Ç—Ä—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ UI
  const editSecondsLeft = canEditNow
    ? Math.max(0, Math.ceil((fbState.firstSubmittedAt + EDIT_WINDOW_MS - now) / 1000))
    : 0;

  if (!visible) return null;

  const pick = (val) => {
    if (status === "done") return;
    setRating(val);
    setErrorMsg("");
  };

  const startEdit = () => {
    // –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–∫–Ω–∞
    setStatus("editing");
    // rating/comment –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–µ
  };

  const submit = async () => {
    if (!lessonId) return;
    if (!rating) return;

    // –í–∞–ª–∏–¥–∞—Ü–∏–∏
    if (!canEditNow && !canSendNew) {
      setStatus("error");
      setErrorMsg("–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ: –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç üôè");
      return;
    }
    if (rating === "down" && comment.trim().length < 10) {
      setStatus("error");
      setErrorMsg("–î–ª—è üëé –¥–æ–±–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ö–æ—Ç—è –±—ã 10 —Å–∏–º–≤–æ–ª–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.");
      return;
    }

    setStatus("submitting");
    setErrorMsg("");

    try {
      const ua = typeof navigator !== "undefined" ? navigator.userAgent : "";
      const ua_hash = ua ? String(hashCode(ua)) : null;

      // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–∞–≤–∫–∞ –≤ 2-–º–∏–Ω—É—Ç–Ω–æ–µ –æ–∫–Ω–æ ‚Äî –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å replaces_id = —Å—Ç–∞—Ä—ã–π id
      const replaces_id = canEditNow && fbState?.lastId ? fbState.lastId : null;

      const { data, error } = await supabase
        .from("feedback")
        .insert({
          user_id: null,                 // –ø–æ–∑–∂–µ –ø–æ–¥—Å—Ç–∞–≤–∏–º user.id
          lesson_id: String(lessonId),
          rating,
          comment: comment.trim() || null,
          ua_hash,
          replaces_id,
        })
        .select("id")

      if (error) {
        console.error("[Supabase insert error]", {
        message: error.message,
        details: error.details,
        hint: error.hint,
        code: error.code,
    });
        throw error;
      }

    if (!data || !Array.isArray(data) || data.length === 0) {
    console.error("[Supabase insert] No data returned");
    throw new Error("No rows returned from insert");
}

const insertedId = data[0].id;
      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–º—è—Ç—å:
      // - –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –º–æ–º–µ–Ω—Ç firstSubmittedAt
      // - –ø—Ä–∏ –ø—Ä–∞–≤–∫–µ ‚Äî –ø–æ–º–µ—á–∞–µ–º editedOnce = true, –Ω–æ –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º firstSubmittedAt
      const nowTs = Date.now();
      const nextState = {
        lastId: data.id,
        firstSubmittedAt: fbState?.firstSubmittedAt ?? nowTs,
        editedOnce: replaces_id ? true : (fbState?.editedOnce ?? false),
      };
      saveState(lessonId, nextState);
      setFbState(nextState);

      setStatus("done");
    } catch (e) {
      console.error(e);
      setStatus("error");
      setErrorMsg("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤. –ü—Ä–æ–≤–µ—Ä—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.");
    }
  };

  const reset = () => {
    setRating(null);
    setComment("");
    setStatus("idle");
    setErrorMsg("");
  };

  return (
    <div className="mt-4 w-full max-w-xl bg-white rounded-md border p-4 shadow-sm">
      {status !== "done" ? (
        <>
          <div className="flex items-center justify-between gap-2">
            <div className="text-gray-800 font-medium">–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è –ª–∏ —É—Ä–æ–∫?</div>
            <div className="flex items-center gap-2">
              <button
                onClick={() => pick("up")}
                className={`px-3 py-2 rounded-md border transition ${
                  rating === "up" ? "bg-green-100 border-green-300" : "bg-white hover:bg-gray-50"
                }`}
                aria-pressed={rating === "up"}
              >
                üëç –ù—Ä–∞–≤–∏—Ç—Å—è
              </button>
              <button
                onClick={() => pick("down")}
                className={`px-3 py-2 rounded-md border transition ${
                  rating === "down" ? "bg-red-100 border-red-300" : "bg-white hover:bg-gray-50"
                }`}
                aria-pressed={rating === "down"}
              >
                üëé –ú–æ–∂–Ω–æ –ª—É—á—à–µ
              </button>
            </div>
          </div>

          {rating && (
            <div className="mt-3">
              <label className="block text-sm text-gray-600 mb-1">
                –•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π? (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                {rating === "down" && <span className="text-red-500"> ‚Ä¢ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ</span>}
              </label>
              <textarea
                value={comment}
                onChange={(e) => setComment(e.target.value)}
                placeholder={
                  rating === "up" ? "–ß—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?" : "–ß—Ç–æ –±—ã–ª–æ –Ω–µ—É–¥–æ–±–Ω–æ / —á—Ç–æ —É–ª—É—á—à–∏—Ç—å?"
                }
                className="w-full min-h-24 p-3 border rounded-md resize-y focus:outline-none"
                maxLength={600}
              />
            </div>
          )}

          {status === "error" && (
            <div className="mt-2 text-sm text-red-600">{errorMsg}</div>
          )}

          <div className="mt-3 flex items-center gap-2">
            <button
              onClick={submit}
              disabled={!rating || status === "submitting"}
              className="px-4 py-2 rounded-md bg-blue-600 text-white disabled:opacity-50"
            >
              {status === "submitting" ? "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..." : canEditNow ? "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∞–≤–∫—É" : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
            </button>

            {rating && (
              <button
                type="button"
                onClick={reset}
                className="px-3 py-2 rounded-md border bg-white hover:bg-gray-50"
              >
                –°–±—Ä–æ—Å–∏—Ç—å
              </button>
            )}

            {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ –ø—Ä–∞–≤–∫–µ / –ª–∏–º–∏—Ç–∞—Ö */}
            {canEditNow && (
              <span className="text-xs text-gray-500">
                –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë {Math.floor(editSecondsLeft / 60)}:{String(editSecondsLeft % 60).padStart(2, "0")}
              </span>
            )}
            {!canEditNow && !canSendNew && (
              <span className="text-xs text-gray-500">
                –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ.
              </span>
            )}
          </div>
        </>
      ) : (
        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
          <div className="text-green-700 font-medium">
            –°–ø–∞—Å–∏–±–æ! –û—Ç–∑—ã–≤ —É—á—Ç—ë–Ω üôå
            {fbState?.editedOnce && <span className="ml-2 text-green-800/70">(–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ)</span>}
          </div>

          <div className="flex items-center gap-2">
            {canEditNow && (
              <button
                onClick={startEdit}
                className="px-3 py-2 rounded-md border bg-white hover:bg-gray-50"
              >
                –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤ ({Math.floor(editSecondsLeft / 60)}:{String(editSecondsLeft % 60).padStart(2, "0")})
              </button>
            )}
            <button
              onClick={reset}
              className="px-3 py-2 rounded-md border bg-white hover:bg-gray-50"
            >
              –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
